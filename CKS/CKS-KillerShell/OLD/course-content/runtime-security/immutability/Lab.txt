Lab 1: Immutability Readonly Filesystem

Ex1: Create a Pod with read-only filesystem
Create a Pod named pod-ro in Namespace sun of image busybox:1.32.0 .

Make sure the container keeps running, like using sleep 1d .

The container root filesystem should be read-only.


Solution

Generate Pod yaml


k -n sun run pod-ro --image=busybox:1.32.0 -oyaml --dry-run=client --command -- sh -c 'sleep 1d' > pod.yaml

Set the readOnlyRootFilesystem :


apiVersion: v1
kind: Pod
metadata:
  labels:
    run: pod-ro
  name: pod-ro
  namespace: sun
spec:
  containers:
  - command:
    - sh
    - -c
    - sleep 1d
    image: busybox:1.32.0
    name: pod-ro
    securityContext:
      readOnlyRootFilesystem: true
  dnsPolicy: ClusterFirst
  restartPolicy: Always

controlplane $ k -f pod.yaml create



Ex2: Fix existing Nginx Deployment to work with read-only filesystem
The Deployment web4.0 in Namespace moon doesn't seem to work with readOnlyRootFilesystem .

Add an emptyDir volume to fix this.


Tip

Check the logs or the yaml to find the location that needs to be writable


Solution

Check the logs to find the location that needs to be writable

k -n moon logs -f deploy/web4.0

controlplane $ k -n moon get pods
NAME                      READY   STATUS             RESTARTS        AGE
web4.0-5644ddccbc-mtdm9   0/1     CrashLoopBackOff   6 (4m40s ago)   10m
web4.0-5644ddccbc-qt9bn   0/1     CrashLoopBackOff   6 (4m33s ago)   10m

controlplane $ k -n moon logs web4.0-5644ddccbc-mtdm9
sh: can't create /etc/date.log: Read-only file system

Edit the Deployment, add a new emptyDir volume


...
    spec:
      containers:
      - command:
        - sh
        - -c
        - date > /etc/date.log && sleep 1d
        image: busybox:1.32.0
        name: container
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc
          name: temp
      volumes:
      - name: temp
        emptyDir: {}


